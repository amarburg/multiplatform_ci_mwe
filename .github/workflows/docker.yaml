name: Docker

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  PUSH: ${{ (github.event_name != 'pull_request') && (github.repository == 'amarburg/multiplatform_ci_mwe') }}

jobs:
  docker_build:
    strategy:
      fail-fast: false
      matrix:
        ROS_DISTRO: [rolling]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - if: env.PUSH == 'true'
        name: Log into registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set metadata for each stage-image separately
      - name: Set Docker metadata for "ci"
        if: env.PUSH == 'true'
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/${{ github.repository }}
          bake-target: docker-metadata-action
          tags: |
            type=raw,value=${{ matrix.ROS_DISTRO }}

      # amd64 build
      - if: github.event_name == 'push'
        name: Build and push (non PR)
        uses: docker/bake-action@v5.7.0
        id: build-amd64
        env:
          BUILDX_ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          BUILDX_GITHUB_REPO: ${{ github.repository }}
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ env.PUSH }}
          set: |
            *.platform=linux/amd64
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}:cache-amd64-${{ matrix.ROS_DISTRO }}
            *.cache-to=type=registry,mode=max,ref=ghcr.io/${{ github.repository }}:cache-amd64-${{ matrix.ROS_DISTRO }}

      # arm64 build
      - if: github.event_name == 'push'
        name: Build and push (non PR)
        uses: docker/bake-action@v5.7.0
        id: build-arm64
        env:
          BUILDX_ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          BUILDX_GITHUB_REPO: ${{ github.repository }}
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          push: ${{ env.PUSH }}
          set: |
            *.platform=linux/arm64
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}:cache-arm64-${{ matrix.ROS_DISTRO }}
            *.cache-to=type=registry,mode=max,ref=ghcr.io/${{ github.repository }}:cache-arm64-${{ matrix.ROS_DISTRO }}

      # Merge amd64 and arm64 images
      - if: github.event_name == 'push'
        name: Create multi-platform manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          tags: ghcr.io/${{ github.repository }}:main
          sources: |
            ghcr.io/${{ github.repository }}@${{ steps.build-amd64.outputs.digest }}
            ghcr.io/${{ github.repository }}@${{ steps.build-arm64.outputs.digest }}


      # Pull request builds are not cached; and only built for AMD64
      - if: github.event_name == 'pull_request'
        name: Build and push (PR)
        uses: docker/bake-action@v5.7.0
        env:
          BUILDX_ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          BUILDX_GITHUB_REPO: ${{ github.repository }}
        with:
          files: |
            ./docker-bake.hcl
          set: |
            *.platform=linux/amd64
            *.cache-from=type=registry,ref=ghcr.io/${{ github.repository }}:cache-amd64-${{ matrix.ROS_DISTRO }}
            *.cache-to=
